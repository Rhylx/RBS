#!/bin/sh

# Options to add :
#   -> Delete an account

maildir="${XDG_DATA_HOME}/mail"
msmtprc="${XDG_CONFIG_HOME:-$HOME/.config}/msmtp/config"
mbsyncrc="${MBSYNCRC:-$HOME/.mbsyncrc}"
cachedir="${XDG_CACHE_HOME:-$HOME/.cache}/mutt-wizard"
muttrc="${XDG_CONFIG_HOME:-$HOME/.config}/mutt/muttrc"
accdir="${XDG_CONFIG_HOME:-$HOME/.config}/mutt/accounts"
mwconfig="${XDG_CONFIG_HOME:-$HOME/.config}/mutt/muttrc_base"
domaininfo="mdb.csv"
emailaddf="emails.csv"

prepmsmtp() { echo "account $fulladdr
host $smtp
port ${sport:-587}
from $fulladdr
user $login
passwordeval \"pass $fulladdr\"
${tlsline:-tls on}
" >> "$msmtprc"
}

prepmbsync() { mkdir -p "${mbsyncrc%/*}"
	echo "
IMAPStore $fulladdr-remote
Host $imap
Port ${iport:-993}
User $login
PassCmd \"pass $fulladdr\"
AuthMechs LOGIN
SSLType ${imapssl:-IMAPS}
MaildirStore $fulladdr-local
Path ${XDG_DATA_HOME}/mail/$fulladdr/
Inbox ${XDG_DATA_HOME}/mail/$fulladdr/${inbox:-INBOX}
Channel $fulladdr
Master :$fulladdr-remote:
Slave :$fulladdr-local:
# End profile
" >> "$mbsyncrc" ;}

prepmutt() { echo "set realname = \"$realname\"
set from = \"$fulladdr\"
set sendmail = \"msmtp -a $fulladdr\"
alias me $realname <$fulladdr>
set folder = \"$maildir/$fulladdr\"
set header_cache = $cachedir/$fulladdr/headers
set message_cachedir = $cachedir/$fulladdr/bodies
synccmd="macro index o \"<shell-escape>mailsync $fulladdr<enter>\" \"run mbsync to sync $fulladdr\""
" > "$accdir/$idnum-$fulladdr.muttrc"

	! grep -q "^source.*mutt-wizard.muttrc" "$muttrc" && echo "source $mwconfig" >> "$muttrc"
	! grep "^source.*.muttrc" "$muttrc" | grep -qv "$mwconfig" && echo "source $accdir/$idnum-$fulladdr.muttrc" >> "$muttrc"
	echo "macro index,pager i$idnum '<sync-mailbox><enter-command>source $accdir/$idnum-$fulladdr.muttrc<enter><change-folder>!<enter>;<check-stats>' \"switch to $fulladdr\"" >> "$muttrc"
}



rdata() {
extractedinf="$(sed '${1}q;d' $emailaddf)"
IFS=, read -r fulladdr realname <<EOF
$extractedinf
EOF
}

getaccounts() { accounts="$(find -L "$accdir" -type f 2>/dev/null | grep -o "[0-9]-.*.muttrc" | sed "s/-/: /;s/\.muttrc$//" | sort -n)" ;}

formatShortcut() { toappend="$toappend
macro index,pager g$1 \"<change-folder>=$3<enter>\" \"go to $2\"
macro index,pager M$1 \";<save-message>=$3<enter>\" \"move mail to $2\"
macro index,pager C$1 \";<copy-message>=$3<enter>\" \"copy mail to $2\"" ;}

setBox() { toappend="$toappend
set $1 = \"+$2\"" ;}

parsedomains(){ serverinfo="$(grep "^${fulladdr#*@}" "$domaininfo" 2>/dev/null)"

	IFS=, read -r service imapsugg iportsugg smtpsugg sportsugg <<EOF
$serverinfo
EOF
	imap="$imapsugg"
	smtp="$smtpsugg"
	sport="$sportsugg"
	iport="$iportsugg"
}

getboxes() {
mailboxes="$(printf "INBOX\\nDrafts\\nJunk\\nTrash\\nSent\\nArchive")"
getaccounts; for x in $(seq 1 9); do echo "$accounts" | grep -q "^$x:" || { export idnum="$x"; break ;}; done






	toappend="mailboxes $(echo "$mailboxes" | sed "s/^/\"=/;s/$/\"/" | paste -sd ' ' - )"
	for x in $mailboxes; do
		case "$x" in
			*[Ss][Ee][Nn][Tt]*) setBox record "$x"; formatShortcut s sent "$x" ;;
			*[Dd][Rr][Aa][Ff][Tt][Ss]*) setBox postponed "$x"; formatShortcut d drafts "$x" ;;
			*[Tt][Rr][Aa][Ss][Hh]*) setBox trash "$x"; formatShortcut t trash "$x" ;;
			*[Jj][Uu][Nn][Kk]*) formatShortcut j junk "$x" ;;
			*[Aa][Rr][Cc][Hh][Ii][Vv][Ee]*) formatShortcut a archive "$x" ;;
			*[Ss][Pp][Aa][Mm]*) formatShortcut S spam "$x" ;;
			*[Ii][Nn][Bb][Oo][Xx]*) formatShortcut i inbox "$x"; setBox spoolfile "$x" inbox="$x" ;;
		esac
	done
}

getprofiles() { \
	mkdir -p "$accdir" "$cachedir/$fulladdr/bodies"
	#unset msmtp_header msmtp_profile mutt_profile mbsync_profile
	prepmbsync
	prepmsmtp
	prepmutt
	#prepnotmuch # Create a notmuch config file if not present already.
}

finalize() { echo "$toappend" >> "$accdir/$idnum-$fulladdr.muttrc"
	echo "$mailboxes" | xargs -I {} mkdir -p "$maildir/$fulladdr/{}/cur" "$maildir/$fulladdr/{}/tmp" "$maildir/$fulladdr/{}/new"
	echo "$fulladdr (account #$idnum) added successfully."
	#command -V urlview >/dev/null 2>&1 && [ ! -f "$HOME/.urlview" ] && echo "COMMAND \$BROWSER" > "$HOME/.urlview"
	return 0 ;}

[! -f "$emailaddf"] || echo "Create a file $emailaddf with full email adresses and realnames"; exit 1;
for x in {1..$(wc -l "$emailaddf")}
do
rdata "$x"
getaccounts; if [ $(echo "$accounts" | grep -q "\s$fulladdr$" 2>/dev/null) ]; then
echo "$fulladdr has already been added"
else
parsedomains && getboxes && getprofiles && finalize
fi
done
