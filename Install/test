#!/bin/sh
# This script will auto-install Arch Linux the way I like
#I/O part :

echo -e "Here is the output of lsblk : \n"
lsblk
echo
read -p "Enter drive you want it to install on (only a if on /dev/sda): " -a X
echo "Assuming that there will be 4 partitions: boot, swap, / and /home"
read -p "Enter partionsize in gb , separated by a space (swap & /): " -a SIZE

#Functionnal part :

export DIST=$(./detect_distrib) #once installation done write this to /etc/environment

internet()
{
	echo "Testing internet connection..."
	ping -c 2 www.example.com 2>&- >/dev/null || (echo "You're not connected to the internet. Check out your connection" && false)
}

partition(){
	echo "Partioning the disk..."
	cat <<EOF | 2>&- >/dev/null fdisk -W always /dev/sd$X || (echo "Either does the drive not exist or swap is too big" && false)


o
n
p


+200M
n
p


+${SIZE[0]}G
n
p


+${SIZE[1]}G
n
p


a
1
w
EOF
}

format_part(){
	echo "Formating the disk..."
	mkfs.ext4 -qF /dev/sd${X}4 >/dev/null 2>&1
	mkfs.ext4 -qF /dev/sd${X}3 >/dev/null 2>&1
	mkfs.ext4 -qF /dev/sd${X}1 >/dev/null 2>&1
	mkswap /dev/sd${X}2 >/dev/null 2>&1
	swapon /dev/sd${X}2 >/dev/null 2>&1
}

mount_part(){
	echo "Mounting partitions..."
	mount /dev/sd${X}3 /mnt >/dev/null 2>&1
	mkdir /mnt/boot >/dev/null 2>&1
	mount /dev/sd${X}1 /mnt/boot >/dev/null 2>&1
	mkdir /mnt/home >/dev/null 2>&1
	mount /dev/sd${X}4 /mnt/home >/dev/null 2>&1 || (echo "The size of swap+/ is bigger then the actual size available on the disk" && false)
}


install_dist(){
	echo "Installing Arch, can take several minutes..."
	pacstrap /mnt base base-devel linux linux-firmware networkmanager vim grub >/dev/null 2>&1 || (echo "Something went wrong during pacstrap step" && false)
}

gen_fstab(){
	echo "Generating fstab..."
	genfstab -U /mnt >> /mnt/etc/fstab
}

chrootin(){
	echo "hi"

}

remove_all(){
	umount /mnt/home >/dev/null 2>&1
	umount /mnt/boot >/dev/null 2>&1
	umount /mnt >/dev/null 2>&1
	swapoff /dev/sd${X}2 >/dev/null 2>&1
	cat << EOF | 2>&- >/dev/null fdisk -W always /dev/sd$X


o
n
p



w
EOF
}

remove_all_error(){
	remove_all
	echo "An error has occured. Fix the issue and rerun this script."
}

remove_all ; internet && partition && format_part && mount_part && install_dist && gen_fstab && chrootin || remove_all_error


